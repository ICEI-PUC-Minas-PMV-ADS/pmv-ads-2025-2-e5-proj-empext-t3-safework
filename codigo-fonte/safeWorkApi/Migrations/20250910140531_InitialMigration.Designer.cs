// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using safeWorkApi.Models;

#nullable disable

namespace safeWorkApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250910140531_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("safeWorkApi.Models.Aso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_solicitacao");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_validade");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("integer")
                        .HasColumnName("id_colaborador");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text")
                        .HasColumnName("observacoes");

                    b.Property<string>("PathFile")
                        .HasColumnType("text")
                        .HasColumnName("path_file");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("TipoAso")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_aso");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.ToTable("asos");
                });

            modelBuilder.Entity("safeWorkApi.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .HasColumnType("text")
                        .HasColumnName("celular");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf_cnpj");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("funcao");

                    b.Property<int>("IdEmpresaCliente")
                        .HasColumnType("integer")
                        .HasColumnName("id_empresa_cliente");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("integer")
                        .HasColumnName("id_endereco");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("NomeRazao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_razao");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<string>("Telefone")
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_pessoa");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresaCliente");

                    b.ToTable("colaboradores");
                });

            modelBuilder.Entity("safeWorkApi.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_fim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<int>("IdEmpresaCliente")
                        .HasColumnType("integer")
                        .HasColumnName("id_empresa_cliente");

                    b.Property<int>("IdEmpresaPrestadora")
                        .HasColumnType("integer")
                        .HasColumnName("id_empresa_prestadora");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text")
                        .HasColumnName("observacoes");

                    b.Property<string>("PathFile")
                        .HasColumnType("text")
                        .HasColumnName("path_file");

                    b.Property<int>("StatusContrato")
                        .HasColumnType("integer")
                        .HasColumnName("status_contrato");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresaCliente");

                    b.HasIndex("IdEmpresaPrestadora");

                    b.ToTable("contratos");
                });

            modelBuilder.Entity("safeWorkApi.Models.EmpresaCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .HasColumnType("text")
                        .HasColumnName("celular");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf_cnpj");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("integer")
                        .HasColumnName("id_endereco");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("NomeRazao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_razao");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<string>("Telefone")
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_pessoa");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.ToTable("EmpresasClientes");
                });

            modelBuilder.Entity("safeWorkApi.Models.EmpresaPrestadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .HasColumnType("text")
                        .HasColumnName("celular");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cpf_cnpj");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("integer")
                        .HasColumnName("id_endereco");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("NomeRazao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_razao");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.Property<string>("Telefone")
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_pessoa");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.ToTable("EmpresasPrestadoras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CpfCnpj = "99999999000199",
                            NomeRazao = "ScPrevenção",
                            Status = true,
                            TipoPessoa = 2
                        });
                });

            modelBuilder.Entity("safeWorkApi.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("complemento");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logradouro");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("municipio");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("safeWorkApi.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomePerfil")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_perfil");

                    b.HasKey("Id");

                    b.ToTable("Perfis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomePerfil = "Root"
                        },
                        new
                        {
                            Id = 2,
                            NomePerfil = "Administrador"
                        },
                        new
                        {
                            Id = 3,
                            NomePerfil = "Colaborador"
                        });
                });

            modelBuilder.Entity("safeWorkApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int?>("IdEmpresaPrestadora")
                        .HasColumnType("integer")
                        .HasColumnName("id_empresa_prestadora");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("integer")
                        .HasColumnName("id_perfil");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("text")
                        .HasColumnName("nome_completo");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdEmpresaPrestadora");

                    b.HasIndex("IdPerfil");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("safeWorkApi.Models.Aso", b =>
                {
                    b.HasOne("safeWorkApi.Models.Colaborador", "Colaborador")
                        .WithMany("Asos")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("safeWorkApi.Models.Colaborador", b =>
                {
                    b.HasOne("safeWorkApi.Models.EmpresaCliente", "EmpresaCliente")
                        .WithMany("Colaboradores")
                        .HasForeignKey("IdEmpresaCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("safeWorkApi.Models.Endereco", "Endereco")
                        .WithMany("Colaborador")
                        .HasForeignKey("IdEmpresaCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaCliente");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("safeWorkApi.Models.Contrato", b =>
                {
                    b.HasOne("safeWorkApi.Models.EmpresaCliente", "EmpresaCliente")
                        .WithMany("Contratos")
                        .HasForeignKey("IdEmpresaCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("safeWorkApi.Models.EmpresaPrestadora", "EmpresaPrestadora")
                        .WithMany("Contratos")
                        .HasForeignKey("IdEmpresaPrestadora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaCliente");

                    b.Navigation("EmpresaPrestadora");
                });

            modelBuilder.Entity("safeWorkApi.Models.EmpresaCliente", b =>
                {
                    b.HasOne("safeWorkApi.Models.Endereco", "Endereco")
                        .WithMany("EmpresaCliente")
                        .HasForeignKey("IdEndereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("safeWorkApi.Models.EmpresaPrestadora", b =>
                {
                    b.HasOne("safeWorkApi.Models.Endereco", "Endereco")
                        .WithMany("EmpresaPrestadora")
                        .HasForeignKey("IdEndereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("safeWorkApi.Models.Usuario", b =>
                {
                    b.HasOne("safeWorkApi.Models.EmpresaPrestadora", "EmpresaPrestadora")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEmpresaPrestadora");

                    b.HasOne("safeWorkApi.Models.Perfil", "Perfil")
                        .WithMany("Usuario")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaPrestadora");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("safeWorkApi.Models.Colaborador", b =>
                {
                    b.Navigation("Asos");
                });

            modelBuilder.Entity("safeWorkApi.Models.EmpresaCliente", b =>
                {
                    b.Navigation("Colaboradores");

                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("safeWorkApi.Models.EmpresaPrestadora", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("safeWorkApi.Models.Endereco", b =>
                {
                    b.Navigation("Colaborador");

                    b.Navigation("EmpresaCliente");

                    b.Navigation("EmpresaPrestadora");
                });

            modelBuilder.Entity("safeWorkApi.Models.Perfil", b =>
                {
                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
